[{"/Users/alex/Desktop/Ironhack/week8/adventure/client/src/index.js":"1","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/reportWebVitals.js":"2","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Root/App.js":"3","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Navbar/Navbar.js":"4","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Books/BookDetails.js":"5","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Auth/Signup.js":"6","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Auth/Login.js":"7","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/Services/auth.service.js":"8","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/services/auth.service.js":"9","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/services/books.service.js":"10","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Root/Home.js":"11","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Footer/Footer.js":"12","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/services/user.service.js":"13","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Books/BookForm.js":"14","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Books/BooksList.js":"15"},{"size":629,"mtime":1607642195799,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1606834834574,"results":"18","hashOfConfig":"17"},{"size":2415,"mtime":1611938279695,"results":"19","hashOfConfig":"17"},{"size":2511,"mtime":1611702973563,"results":"20","hashOfConfig":"17"},{"size":4379,"mtime":1611943695474,"results":"21","hashOfConfig":"17"},{"size":2218,"mtime":1611243174930,"results":"22","hashOfConfig":"17"},{"size":2148,"mtime":1607549733594,"results":"23","hashOfConfig":"17"},{"size":639,"mtime":1607280569021,"results":"24","hashOfConfig":"17"},{"size":642,"mtime":1607560275607,"results":"25","hashOfConfig":"17"},{"size":1045,"mtime":1610897288407,"results":"26","hashOfConfig":"17"},{"size":1336,"mtime":1607675871149,"results":"27","hashOfConfig":"17"},{"size":308,"mtime":1607675940717,"results":"28","hashOfConfig":"17"},{"size":490,"mtime":1611703227815,"results":"29","hashOfConfig":"17"},{"size":10817,"mtime":1611938410546,"results":"30","hashOfConfig":"17"},{"size":3667,"mtime":1611942018546,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"soghx0",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alex/Desktop/Ironhack/week8/adventure/client/src/index.js",[],["66","67"],"/Users/alex/Desktop/Ironhack/week8/adventure/client/src/reportWebVitals.js",[],"/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Root/App.js",[],"/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Navbar/Navbar.js",["68","69"],"import React, { useState } from 'react';\n\nimport { Link, useHistory } from 'react-router-dom';\n\nimport Auth from '../../services/auth.service';\n\nimport './Navbar.scss';\n\nimport logo from '../../static/logo.svg';\n\nconst Navbar = (props) => {\n  const [isActive, setIsActive] = useState(false);\n\n  const history = useHistory();\n\n  const logoutUser = () => {\n    Auth\n      .logout()\n      .then(() => {\n        props.setUser(null);\n        history.push(`/`);\n      });\n  };\n\n  return (\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"navbar-brand\">\n        <Link to='/' className=\"navbar-item\">\n          <img src={logo}></img>\n        </Link>\n\n        <a onClick={() => {\n              setIsActive(!isActive)\n            }}\n            role=\"button\" \n            className={`navbar-burger burger ${isActive ? 'is-active' : ''}`} \n            aria-label=\"menu\" \n            aria-expanded=\"false\" \n            data-target=\"navbarBasicExample\"\n          >\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </a>\n      </div>\n\n      \n\n        <div className=\"navbar-end\">\n\n        <div id=\"navbarBasicExample\" className={`navbar-menu ${isActive ? 'is-active' : ''}`}>\n        <div className=\"navbar-start\">\n          <Link to='/books' className=\"navbar-item\" >Public books</Link>\n          { props.user && (\n            <>\n              <Link to='/user/favourite-books' className='navbar-item'>Fav. Books</Link>\n              <Link to='/user/books' className=\"navbar-item\" >My books</Link> \n              <Link to='/book/create' className=\"navbar-item\" >Create a book</Link>\n            </>\n          )}\n        </div>\n\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              { !props.user && (\n                <>\n                  <Link to='/signup' className=\"button is-primary\">\n                    <strong>Sign up</strong>\n                  </Link>\n                  <Link to='/login' className=\"button is-light\">\n                    <strong>Log in</strong>\n                  </Link>\n                </>\n              ) }\n              { props.user && (                \n                <button onClick={ logoutUser } className=\"button is-light\">\n                  <strong>Sign out</strong>\n                </button>\n              ) }\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n\n  );\n};\n\nexport default Navbar;","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Books/BookDetails.js",["70"],"/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Auth/Signup.js",[],"/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Auth/Login.js",[],"/Users/alex/Desktop/Ironhack/week8/adventure/client/src/Services/auth.service.js",["71"],"/Users/alex/Desktop/Ironhack/week8/adventure/client/src/services/auth.service.js",[],"/Users/alex/Desktop/Ironhack/week8/adventure/client/src/services/books.service.js",[],"/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Root/Home.js",["72"],"import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport icon from '../../static/icon.png';\n\nconst Home = (props) => {\n  return (\n    <div className='columns is-centered my-6 has-text-centered mx-2'>\n      <div className='column is-three-fifths-desktop is-four-fifths-tablet is-full-mobile p-6 border-gray box'>\n        <img src={icon} className=\"mb-4\"></img>\n        <h1 className='title mb-4'>Create your own adventure</h1>\n        <p className='has-text-justified mb-6'>\n          Have you ever get frustrated because the main character from a book you love is doing something stupid? Now you can be that character and make that stupid decision (among others).<br/> On Talechoose you can create stories where to take decisions that lead to different paths and endings so the reader will be playing your book. You can also play other people's books, Talechoose is both a place where to create your game books and where to read yours or other people's ones. Turn your children into heroes, your friends into adventurers or anything you can think of, there is no limit.\n        </p>\n        <Link to={props.user ? '/books' : '/signup'} className=\"button is-info\">\n          <strong>{props.user ? 'Search for an' : 'Start your'} Adventure</strong>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Footer/Footer.js",[],"/Users/alex/Desktop/Ironhack/week8/adventure/client/src/services/user.service.js",[],"/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Books/BookForm.js",["73"],"import React, { useState, useEffect } from 'react';\n\nimport Books from '../../services/books.service';\n\nimport './BookForm.scss';\n\nconst newDecision = () => ({\n  id: +new Date(),\n  option: 'Continue',\n  toBlock: '',\n});\n\nconst newBlock = (blockNumber) => ({\n  _id: `${+new Date()}`,\n  title: `Block ${blockNumber}`,\n  content: '',\n});\n\nconst newBook = (blockNumber) => ({\n  title: '',\n  blocks: [newBlock(blockNumber)],\n  public: true,\n});\n\nconst BookForm = (props) => {\n  const [blockNumber, setBlockNumber] = useState(1);\n  const [book, setBook] = useState(newBook(blockNumber));\n\n  const { id: bookId } = props.match.params;\n  const editMode = !!bookId;\n\n  useEffect(() => {\n    if (editMode) {\n      getBookById(bookId);\n    } else if (book._id) {\n      /**\n       * In case the book stored on the state has a `_id`, it means that we come from the edit view,\n       * and the state needs to be refreshed\n       */\n      setBook(newBook(blockNumber));\n    }\n  }, [props.match.params]);\n\n  // PRIVATE FUNCTIONS\n  function getBookById(id) {\n    Books \n      .getById(id, true)\n      .then((book) => {\n\n        /**\n         * There's a difference between how the books are stored and how are they used on this page.\n         * This is because the `book.block.decisions` point to other blocks (`toBlock`) via their titles,\n         * but this field can be modified, and then the link between a `decision` and a `block` would break\n         * (as then there would not be a block with that title anymore).\n         * In order to solve it, the book is parsed upon fetching, and the decisions point to other blocks\n         * (`toBlock`) using their IDs.\n         * This is later on parsed again before submitting, so the API can store the book with its decisions\n         * pointing to other blocks (`toBlock`) using their titles.\n         */\n        const parsedBook = {\n          ...book,\n          blocks: book.blocks.map((block) => ({\n            ...block,\n            decisions: block.decisions?.map((decision) => {\n              // On the database, the decision points to the `block.title` (`decision.toBlock`)\n              const matchingBlock = book.blocks.find((block) => block.title === decision.toBlock);\n\n              return {\n                ...decision,\n                // On the application, the decision points to the `block._id` (`decision.toBlock`)\n                toBlock: matchingBlock._id,\n              }\n            })\n          })),\n        };\n  \n        setBook(parsedBook);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // VIEW FUNCTIONS\n  const handleBookChange = (event) => {\n    const { name, value } = event.target;\n\n    setBook({ ...book, [name]: value });\n  };\n\n  const handleBlockChange = (block) => (event) => {\n    const { name, value } = event.target;\n\n    const { blocks } = book;\n    const index = blocks.indexOf(block);\n    const total = blocks.length;\n\n    const modifiedBlock = { ...block, [name]: value };\n\n    const modifiedBlocks = [\n      ...blocks.slice(0, index),\n      modifiedBlock,\n      ...blocks.slice(index + 1, total),\n    ];\n    \n    setBook({ ...book, blocks: modifiedBlocks });\n  };\n\n  const handleDecisionChange = (block, decision) => (event) => {\n    const { name, value } = event.target;\n\n    const { blocks } = book;\n\n    const decisionIndex = block.decisions.indexOf(decision);\n    const totalDecisions = block.decisions.length;\n\n    const modifiedDecision = { ...decision, [name]: value };\n\n    const modifiedDecisions = [\n      ...block.decisions.slice(0, decisionIndex),\n      modifiedDecision,\n      ...block.decisions.slice(decisionIndex + 1, totalDecisions),\n    ];\n\n    const blockIndex = blocks.indexOf(block);\n    const totalBlocks = blocks.length;\n    \n    const modifiedBlock = { ...block, decisions: modifiedDecisions };\n    \n    const modifiedBlocks = [\n      ...blocks.slice(0, blockIndex),\n      modifiedBlock,\n      ...blocks.slice(blockIndex + 1, totalBlocks),\n    ];\n    \n    setBook({ ...book, blocks: modifiedBlocks });\n  }\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const bookToSend = {\n      ...book,\n      blocks: book.blocks.map((block) => {\n        return {\n          title: block.title,\n          content: block.content,\n          decisions: block.decisions?.map((decision) => {\n            let decisionPath = book.blocks.find(block => block._id === decision.toBlock);\n\n            return {\n              ...decision,\n              toBlock: decisionPath.title\n            }\n          })\n        };\n      }),\n    };\n\n    if (editMode) {\n      Books.update(bookToSend._id, bookToSend)\n        .then((book) => { \n          props.history.push(`/user/books`);\n        })\n        .catch((error) => console.log(error));\n    } else {\n      Books.create(bookToSend)\n        .then((book) => { \n          setBook(newBook);\n          props.history.push(`/user/books`);\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  const addBlock = () => {\n    setBlockNumber(blockNumber + 1);\n\n    const blocks = [...book.blocks, newBlock(blockNumber)];\n\n    setBook({ ...book, blocks });\n  };\n\n  const removeBlock = (block) => { \n    const blocks = book.blocks.filter((item) => item._id !== block._id);\n\n    setBook({ ...book, blocks });\n  }\n\n  const addDecision = (block) => {\n    const { blocks } = book;\n\n    const decisions = [...(block.decisions || []), newDecision()];\n\n    const blockIndex = blocks.indexOf(block);\n    const totalBlocks = blocks.length;\n\n    const modifiedBlock = { ...block, decisions };\n    \n    const modifiedBlocks = [\n      ...blocks.slice(0, blockIndex),\n      modifiedBlock,\n      ...blocks.slice(blockIndex + 1, totalBlocks),\n    ];\n\n    setBook({ ...book, blocks: modifiedBlocks });\n  };\n\n  const removeLastDecision = (block, id) => {\n    const { blocks } = book;\n\n    const decisions = block.decisions.filter((decision) => decision.id !== id);\n\n    const blockIndex = blocks.indexOf(block);\n    const totalBlocks = blocks.length;\n\n    const modifiedBlock = { ...block, decisions };\n    \n    const modifiedBlocks = [\n      ...blocks.slice(0, blockIndex),\n      modifiedBlock,\n      ...blocks.slice(blockIndex + 1, totalBlocks),\n    ];\n\n    setBook({ ...book, blocks: modifiedBlocks });\n  };\n\n  const changeVisibility = () => {\n    setBook({\n      ...book,\n      public: !book.public,\n    });\n  };\n\n  return (\n    <div>\n      <div className='is-flex is-justify-content-space-between'>\n        <button className='button mt-2 is-primary is-outlined'onClick={() => editMode ? props.history.push('/user/books') : props.history.push('/books')}> ᐸ Go back</button>\n        <div className='mt-2 switch is-flex is-align-items-center'>\n          <input checked={book.public} onChange={changeVisibility} className='checkboxPublic' id='visibility' type='checkbox'></input>\n          <label className='visibility px-3 py-2' for='visibility' >Public</label>\n          <label className='visibility px-3 py-2' for='visibility' >Private</label>\n        </div>\n      </div>\n      \n      <h1 className='is-size-3 has-text-centered mt-2'>{ editMode ? `Editing ${book.title}` : 'Your adventure starts here...' }</h1>\n      <div className='columns is-centered mt-4'>\n        <form className='column is-three-fifths' onSubmit={handleFormSubmit}>\n          <div>\n            <label htmlFor='title'>Title of your book:</label>\n            <div className='control'>\n              <input\n                className='input'\n                placeholder='Book title '\n                id='title'\n                name='title'\n                value={book.title}\n                onChange={handleBookChange}\n                required\n              />\n            </div>\n          </div>\n\n          {book.blocks.map((block) => (\n            <div className='has-background-light p-4 mt-4' key={block._id}>\n              <div className='control mb-4'>\n                <div className='is-flex is-justify-content-space-between'>\n                  <label htmlFor={block.id}>Title of your block:</label>\n                  {book.blocks.length > 1 ? <button  className='button is-small is-danger is-light ' onClick={() => removeBlock(block)}>Delete block</button> : <></>}\n                </div>\n                <input\n                  className='input'\n                  id={block._id}\n                  name='title'\n                  value={block.title}\n                  onChange={handleBlockChange(block)}\n                  required\n                />\n              </div>\n\n              <div className='mb-4'>\n                <label htmlFor='blockContent'>Content of your block:</label>\n                <textarea\n                  className='textarea'\n                  id={block._id + 'blockContent'}\n                  rows=\"4\"\n                  cols=\"50\"\n                  name='content'\n                  value={block.content}\n                  onChange={handleBlockChange(block)}\n                  required\n                />\n              </div>\n\n              {block.decisions?.map((decision) => (\n                <div className='is-flex is-justify-content-space-between mb-2 is-flex-wrap-wrap' key={decision.id}>\n                  <div>\n                    <label className='pr-1'>Option:</label>\n                    <input className='input is-inline is-small' name='option' onChange={handleDecisionChange(block, decision)} value={decision.option} required></input>\n                  </div>\n                  <div>\n                    <label className='pr-1'>Title of the block where it leads:</label>\n                    <select className='is-small select is-inline' name='toBlock' onChange={handleDecisionChange(block, decision)} required defaultValue={editMode ? decision.toBlock : ''}>\n                      <option disabled value={''}>Select a block </option>\n                      \n                      {book.blocks.map((item) => (\n                        <option key={item._id} value={item._id}>{item.title}</option>\n                      ))}\n                    </select>\n                  </div>\n                  \n                  <button className='button is-small is-danger is-light' type=\"button\" onClick={() => removeLastDecision(block, decision.id)}>Detele decision</button>\n                </div>\n              ))}\n              <button className='button is-small is-success block mt-2' type=\"button\" onClick={() => addDecision(block)}>Add a decision</button>\n            </div>\n          ))}\n          <button className='button is-normal is-success mt-4' type=\"button\" onClick={addBlock}>Add new block</button>\n          <div className='is-flex is-justify-content-center my-6'>\n            <button className='button is-normal is-primary' type='submit'>Submit your story</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default BookForm;","/Users/alex/Desktop/Ironhack/week8/adventure/client/src/components/Books/BooksList.js",["74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":29,"column":11,"nodeType":"81","endLine":29,"endColumn":27},{"ruleId":"82","severity":1,"message":"83","line":32,"column":9,"nodeType":"81","endLine":40,"endColumn":12},{"ruleId":"84","severity":1,"message":"85","line":60,"column":39,"nodeType":"86","endLine":60,"endColumn":41,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":24,"column":1,"nodeType":"90","endLine":29,"endColumn":3},{"ruleId":"79","severity":1,"message":"80","line":11,"column":9,"nodeType":"81","endLine":11,"endColumn":42},{"ruleId":"84","severity":1,"message":"91","line":42,"column":6,"nodeType":"86","endLine":42,"endColumn":26,"suggestions":"92"},{"ruleId":"84","severity":1,"message":"93","line":39,"column":6,"nodeType":"86","endLine":39,"endColumn":26,"suggestions":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params'. Either include it or remove the dependency array.","ArrayExpression",["97"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'blockNumber', 'book._id', 'bookId', and 'editMode'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setBook' needs the current value of 'blockNumber'.",["98"],"React Hook useEffect has a missing dependency: 'getBooks'. Either include it or remove the dependency array.",["99"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [props.match.params]",{"range":"106","text":"107"},"Update the dependencies array to be: [blockNumber, book._id, bookId, editMode, props.match.params]",{"range":"108","text":"109"},"Update the dependencies array to be: [getBooks, props.match.params]",{"range":"110","text":"111"},[1904,1906],"[props.match.params]",[966,986],"[blockNumber, book._id, bookId, editMode, props.match.params]",[1397,1417],"[getBooks, props.match.params]"]